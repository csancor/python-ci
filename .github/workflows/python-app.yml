name: Python Lambda Application Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build Docker image
        run: |          
          docker build -t hello_world_repository application/

      - name: Login to AWS ECR
        env:
          AWS_REGION: us-east-1
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Tag and Push Docker image to ECR
        run: |          
          docker tag hello_world_repository:latest 590183754856.dkr.ecr.us-east-1.amazonaws.com/hello_world_repository:${{ github.run_id }}          
          docker push 590183754856.dkr.ecr.us-east-1.amazonaws.com/hello_world_repository:${{ github.run_id }}         

      - name: Set Docker image URL as output
        run: |
          echo "image=${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/hello_world_repository:${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Set IMAGE_TAG environment variable
        run: echo "IMAGE_TAG=${{ github.run_id }}" >> $GITHUB_ENV

      - name: Deploy app
        run: |
          aws lambda update-function-code --function-name ${{ secrets.FUNCTION_NAME }} --image-uri ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/hello_world_repository:${{ github.run_id }} --environment "Variables={IMAGE_TAG=${{ env.IMAGE_TAG }}}"
